openapi: 3.0.0
info:
  title: Interview Test API
  description: API service for managing technical interview tests
  version: 1.0.0
  
servers:
  - url: http://localhost:8000/api/v1
    description: Local development server

tags:
  - name: health
    description: Health check endpoints
  - name: test
    description: Test management endpoints

paths:
  /health:
    get:
      tags:
        - health
      summary: Health Check
      description: Check if the service is running
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "ok"
  
  /test:
    post:
      tags:
        - test
      summary: Create Test
      description: Create a new interview test
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTestRequest'
      responses:
        '200':
          description: Test created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    TestType:
      type: string
      enum:
        - coding
        - system_design
        - behavior
      
    TestLanguage:
      type: string
      enum:
        - python
        - java
        - javascript
    
    TestDifficulty:
      type: string
      enum:
        - easy
        - medium
        - hard
    
    CreateTestRequest:
      type: object
      properties:
        test_id:
          type: string
          example: "test001"
        type:
          $ref: '#/components/schemas/TestType'
        language:
          $ref: '#/components/schemas/TestLanguage'
        difficulty:
          $ref: '#/components/schemas/TestDifficulty'
        create_date:
          type: string
          format: date-time
          example: "2024-03-20T10:00:00Z"
      required:
        - test_id
        - type
        - language
        - difficulty
        - create_date
    
    TestResponse:
      type: object
      properties:
        code:
          type: string
          example: "0"
        message:
          type: string
          example: "success"
        data:
          type: object
          properties:
            test_id:
              type: string
              example: "test001"
            status:
              type: string
              example: "created"
    
    ErrorResponse:
      type: object
      properties:
        code:
          type: string
          example: "1"
        message:
          type: string
          example: "Error message details"
        data:
          type: null
          example: null 